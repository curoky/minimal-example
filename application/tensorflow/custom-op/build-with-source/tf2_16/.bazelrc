startup --host_jvm_args=-XX:-UseParallelGC
common --experimental_repo_remote_exec

build -c opt
build --spawn_strategy=local
build --announce_rc

build --define framework_shared_object=true
build --define tsl_protobuf_header_only=true
build --define=use_fast_cpp_protos=true
build --define=allow_oversize_protos=true
build --define=tf_api_version=2 --action_env=TF2_BEHAVIOR=1
build --define=with_xla_support=true
build --define=grpc_no_ares=true
build --define=no_aws_support=true
build --define=no_hdfs_support=true

build --noincompatible_remove_legacy_whole_archive
build --features=-force_no_whole_archive
build --enable_platform_specific_config
build --experimental_cc_shared_library
build --experimental_link_static_libraries_once=false
build --incompatible_enforce_config_setting_visibility

build --repo_env=TF_CUDA_PATHS=/usr/local/cuda-12.3
build --repo_env=CUDNN_INSTALL_PATH=/usr/local/cudnn8-cu12.3
build --repo_env=TF_CUDA_COMPUTE_CAPABILITIES="sm_80" # compute_90

build --config=short_logs
build:short_logs --output_filter=DONT_MATCH_ANYTHING
build:verbose_logs --output_filter=

# build:linux --host_copt=-w
# build:linux --copt="-Wno-all"
# build:linux --copt="-Wno-extra"
# build:linux --copt="-Wno-deprecated"
# build:linux --copt="-Wno-deprecated-declarations"
# build:linux --copt="-Wno-ignored-attributes"
# build:linux --copt="-Wno-array-bounds"
# build:linux --copt="-Wunused-result"
# build:linux --copt="-Werror=unused-result"
# build:linux --copt="-Wswitch"
# build:linux --copt="-Werror=switch"
# build:linux --copt="-Wno-error=unused-but-set-variable"
# # build:linux --define=PREFIX=/usr
# # build:linux --define=LIBDIR=$(PREFIX)/lib
# # build:linux --define=INCLUDEDIR=$(PREFIX)/include
# # build:linux --define=PROTOBUF_INCLUDE_PATH=$(PREFIX)/include
build:linux --cxxopt=-std=c++17
build:linux --host_cxxopt=-std=c++17
# build:linux --config=dynamic_kernels
# build:linux --experimental_guard_against_concurrent_changes
# build:avx_linux --copt=-mavx5
# build:avx_linux --host_copt=-mavx

build:cuda --repo_env TF_NEED_CUDA=1
build:cuda --crosstool_top=@local_config_cuda//crosstool:toolchain
build:cuda --@local_config_cuda//:enable_cuda
