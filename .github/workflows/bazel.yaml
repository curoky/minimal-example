name: bazel

on:
  push:
    paths:
      - .github/workflows/bazel.yaml
      - build-system/bazel/**
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  cpp:
    defaults:
      run:
        working-directory: build-system/bazel/cpp
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - run: bazel build //src:main
      - run: bazel run @hedron_compile_commands//:refresh_all

  go:
    defaults:
      run:
        working-directory: build-system/bazel/go/without-bzlmod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      # - uses: actions/setup-go@v3
      #   with:
      #     go-version: '^1.18'
      #     cache: true
      #     go-version-file: 'bazel/go/go.mod'
      #     cache-dependency-path: 'bazel/go/go.sum'
      # - run: go install github.com/bazelbuild/bazel-gazelle/cmd/gazelle@latest
      # - run: gazelle update-repos -from_file=go.mod -to_macro=go_mod.bzl%go_repositories
      # - run: gazelle -go_prefix github.com/curoky/learn-build-system -lang go -exclude design-pattern -exclude external -exclude service -build_file_name BUILD
      - run: bazel run //:gazelle-update-repos
      - run: bazel run //:gazelle
      - run: bazel run :go-example

  with_buildbuddy:
    defaults:
      run:
        working-directory: build-system/bazel/with-buildbuddy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - run: |
          BUILDBUDDY_API=${{ secrets.BUILDBUDDY_API }} envsubst < .bazelrc | tee .bazelrc.new
          mv -f .bazelrc.new .bazelrc
      - run: bazel build //src:main --config=remote_cache
      - run: bazel build //src:main --config=remote_build

  with_bzlmod:
    defaults:
      run:
        working-directory: build-system/bazel/with-bzlmod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - run: sudo apt-get install -y gcc-11 g++-11
      - run: bazel build //src:main
        env:
          USE_BAZEL_VERSION: last_green
          CC: gcc-11
          CXX: gcc-11

  with_clang:
    defaults:
      run:
        working-directory: build-system/bazel/with-clang-v2
    runs-on: ubuntu-latest
    container:
      image: ubuntu:24.04
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - run: apt-get install -y gcc-11 g++-11
      - run: |
          bazel run //src:feature_test
          bazel run //src:main
        env:
          USE_BAZEL_VERSION: last_green
          CC: gcc-11
          CXX: gcc-11

  with_libllvm:
    defaults:
      run:
        working-directory: build-system/bazel/with-libllvm-v2
    runs-on: ubuntu-latest
    container:
      image: ubuntu:24.04
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - run: apt-get -y update
      - run: apt-get install -y curl wget git gcc-13 g++-13 lld gettext libz-dev
      - run: |
          BUILDBUDDY_API=${{ secrets.BUILDBUDDY_API }} envsubst < .bazelrc | tee .bazelrc.new
          mv -f .bazelrc.new .bazelrc

      - run: bazel run //src:main --config=ci
        env:
          CC: gcc-13
          CXX: gcc-13

  with_conan:
    defaults:
      run:
        working-directory: build-system/bazel/with-conan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - uses: Homebrew/actions/setup-homebrew@master
      - run: sudo apt-get install -y gcc-11 g++-11
      - run: brew install conan
      - run: conan profile detect --force
      - run: conan profile path default
      - run: conan install conanfile.txt --output-folder=builddir/conan --build=missing
      - run: bazel run //src:main
        env:
          CC: gcc-11
          CXX: gcc-11

  # with_remote_cache:
  #   runs-on: ubuntu-latest
  #   services:
  #     httpbin:
  #       image: kennethreitz/httpbin
  #       ports:
  #         - 3200:80

  #     remote-cache:
  #       image: curoky/my-own-x:bazel-remote-cache
  #       ports:
  #         - 8080:8080
  #         - 9092:9092
  #       options: >-
  #         -u 1001:121
  #       env:
  #         BAZEL_REMOTE_MAX_SIZE: 2
  #         BAZEL_REMOTE_DIR: /data/remote-cache
  #       volumes:
  #         - /tmp:/data

  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: bazelbuild/setup-bazelisk@v3

  #     - name: mount bazel cache
  #       uses: actions/cache@v4
  #       with:
  #         path: /tmp/remote-cache
  #         key: bazel-hello-${{ github.run_id }}-${{ github.sha }}
  #         restore-keys: |
  #           bazel-

  #     - run: curl http://0.0.0.0:8080/status >> $GITHUB_STEP_SUMMARY

  #     - name: bazel build
  #       run: bazel run //src:main
  #       working-directory: bazel/with-remote-cache

  #     - run: curl http://0.0.0.0:8080/status >> $GITHUB_STEP_SUMMARY
